stages:
  - build
  - test
  - deploy


build:rosette:
  stage: build
  image: nixos/nix
  script:
    - cd rosette
    - nix-build
    - ./run.sh rbl/rosette/tests/simple_add.rbl


build:p2p-test-network:
  stage: build
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2

  #  services:
  #  - docker:dind

  before_script:
    - apk update 
    - docker info
    - docker ps

  script:
    - export JAVA_HOME="/usr/lib/jvm/java-1.8-openjdk"
    - ./scripts/alpline37_install_deps.sh
    - ./scripts/install_secp.sh
    - ./scripts/install_sodium.sh
    - ./scripts/install_bnfc.sh
      # - sbt -Dsbt.log.noformat=true clean rholang/bnfc:generate node/docker
    - ./scripts/p2p-test-network.sh local && ./scripts/p2p-test-network.sh run-tests 50

      # - apk add jflex 
      # - echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
      #apk add cherokee --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted

      #- apk add g++ 
      #apk add --update alpine-sdk
      #- apk add autoconf libtool #?no need for libtool secp
  # build:test_artifact_creation:
  #   stage: build 
  #   image: ubuntu:xenial 
  #   script:
  #     - ./scripts/install_deps_ubuntu1604.sh 
  #     - sbt -Dsbt.log.noformat=true clean rholang/bnfc:generate node/debian:packageBin node/rpm:packageBin node/universal:packageZipTarball
  # 
  # build:core:
  #   stage: build
  #   image: ubuntu:xenial 
  #   script:
  #     - ./scripts/install_deps_ubuntu1604.sh 
  #     - ./scripts/build_core.sh
  # 
  # deploy:
  #   stage: deploy
  #   artifacts:
  #     paths:
  #     - public
  #   only:
  #   - master
  #   - dev
  #   script:
  #   - sbt -Dsbt.log.noformat=true clean rholang/bnfc:generate node/debian:packageBin node/rpm:packageBin node/universal:packageZipTarball 
  #   test4
